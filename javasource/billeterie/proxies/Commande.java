// This file was generated by Mendix Studio Pro.
//
// WARNING: Code you write here will be lost the next time you deploy the project.

package billeterie.proxies;

public class Commande
{
	private final com.mendix.systemwideinterfaces.core.IMendixObject commandeMendixObject;

	private final com.mendix.systemwideinterfaces.core.IContext context;

	/**
	 * Internal name of this entity
	 */
	public static final java.lang.String entityName = "Billeterie.Commande";

	/**
	 * Enum describing members of this entity
	 */
	public enum MemberNames
	{
		commandeID("commandeID"),
		commandeRef("commandeRef"),
		Commande_Billet("Billeterie.Commande_Billet");

		private java.lang.String metaName;

		MemberNames(java.lang.String s)
		{
			metaName = s;
		}

		@java.lang.Override
		public java.lang.String toString()
		{
			return metaName;
		}
	}

	public Commande(com.mendix.systemwideinterfaces.core.IContext context)
	{
		this(context, com.mendix.core.Core.instantiate(context, "Billeterie.Commande"));
	}

	protected Commande(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject commandeMendixObject)
	{
		if (commandeMendixObject == null)
			throw new java.lang.IllegalArgumentException("The given object cannot be null.");
		if (!com.mendix.core.Core.isSubClassOf("Billeterie.Commande", commandeMendixObject.getType()))
			throw new java.lang.IllegalArgumentException("The given object is not a Billeterie.Commande");

		this.commandeMendixObject = commandeMendixObject;
		this.context = context;
	}

	/**
	 * @deprecated Use 'Commande.load(IContext, IMendixIdentifier)' instead.
	 */
	@java.lang.Deprecated
	public static billeterie.proxies.Commande initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		return billeterie.proxies.Commande.load(context, mendixIdentifier);
	}

	/**
	 * Initialize a proxy using context (recommended). This context will be used for security checking when the get- and set-methods without context parameters are called.
	 * The get- and set-methods with context parameter should be used when for instance sudo access is necessary (IContext.createSudoClone() can be used to obtain sudo access).
	 */
	public static billeterie.proxies.Commande initialize(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixObject mendixObject)
	{
		return new billeterie.proxies.Commande(context, mendixObject);
	}

	public static billeterie.proxies.Commande load(com.mendix.systemwideinterfaces.core.IContext context, com.mendix.systemwideinterfaces.core.IMendixIdentifier mendixIdentifier) throws com.mendix.core.CoreException
	{
		com.mendix.systemwideinterfaces.core.IMendixObject mendixObject = com.mendix.core.Core.retrieveId(context, mendixIdentifier);
		return billeterie.proxies.Commande.initialize(context, mendixObject);
	}

	public static java.util.List<billeterie.proxies.Commande> load(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String xpathConstraint) throws com.mendix.core.CoreException
	{
		java.util.List<billeterie.proxies.Commande> result = new java.util.ArrayList<billeterie.proxies.Commande>();
		for (com.mendix.systemwideinterfaces.core.IMendixObject obj : com.mendix.core.Core.retrieveXPathQuery(context, "//Billeterie.Commande" + xpathConstraint))
			result.add(billeterie.proxies.Commande.initialize(context, obj));
		return result;
	}

	/**
	 * Commit the changes made on this proxy object.
	 */
	public final void commit() throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Commit the changes made on this proxy object using the specified context.
	 */
	public final void commit(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		com.mendix.core.Core.commit(context, getMendixObject());
	}

	/**
	 * Delete the object.
	 */
	public final void delete()
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}

	/**
	 * Delete the object using the specified context.
	 */
	public final void delete(com.mendix.systemwideinterfaces.core.IContext context)
	{
		com.mendix.core.Core.delete(context, getMendixObject());
	}
	/**
	 * @return value of commandeID
	 */
	public final java.lang.Long getcommandeID()
	{
		return getcommandeID(getContext());
	}

	/**
	 * @param context
	 * @return value of commandeID
	 */
	public final java.lang.Long getcommandeID(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.Long) getMendixObject().getValue(context, MemberNames.commandeID.toString());
	}

	/**
	 * Set value of commandeID
	 * @param commandeid
	 */
	public final void setcommandeID(java.lang.Long commandeid)
	{
		setcommandeID(getContext(), commandeid);
	}

	/**
	 * Set value of commandeID
	 * @param context
	 * @param commandeid
	 */
	public final void setcommandeID(com.mendix.systemwideinterfaces.core.IContext context, java.lang.Long commandeid)
	{
		getMendixObject().setValue(context, MemberNames.commandeID.toString(), commandeid);
	}

	/**
	 * @return value of commandeRef
	 */
	public final java.lang.String getcommandeRef()
	{
		return getcommandeRef(getContext());
	}

	/**
	 * @param context
	 * @return value of commandeRef
	 */
	public final java.lang.String getcommandeRef(com.mendix.systemwideinterfaces.core.IContext context)
	{
		return (java.lang.String) getMendixObject().getValue(context, MemberNames.commandeRef.toString());
	}

	/**
	 * Set value of commandeRef
	 * @param commanderef
	 */
	public final void setcommandeRef(java.lang.String commanderef)
	{
		setcommandeRef(getContext(), commanderef);
	}

	/**
	 * Set value of commandeRef
	 * @param context
	 * @param commanderef
	 */
	public final void setcommandeRef(com.mendix.systemwideinterfaces.core.IContext context, java.lang.String commanderef)
	{
		getMendixObject().setValue(context, MemberNames.commandeRef.toString(), commanderef);
	}

	/**
	 * @return value of Commande_Billet
	 */
	public final billeterie.proxies.Billet getCommande_Billet() throws com.mendix.core.CoreException
	{
		return getCommande_Billet(getContext());
	}

	/**
	 * @param context
	 * @return value of Commande_Billet
	 */
	public final billeterie.proxies.Billet getCommande_Billet(com.mendix.systemwideinterfaces.core.IContext context) throws com.mendix.core.CoreException
	{
		billeterie.proxies.Billet result = null;
		com.mendix.systemwideinterfaces.core.IMendixIdentifier identifier = getMendixObject().getValue(context, MemberNames.Commande_Billet.toString());
		if (identifier != null)
			result = billeterie.proxies.Billet.load(context, identifier);
		return result;
	}

	/**
	 * Set value of Commande_Billet
	 * @param commande_billet
	 */
	public final void setCommande_Billet(billeterie.proxies.Billet commande_billet)
	{
		setCommande_Billet(getContext(), commande_billet);
	}

	/**
	 * Set value of Commande_Billet
	 * @param context
	 * @param commande_billet
	 */
	public final void setCommande_Billet(com.mendix.systemwideinterfaces.core.IContext context, billeterie.proxies.Billet commande_billet)
	{
		if (commande_billet == null)
			getMendixObject().setValue(context, MemberNames.Commande_Billet.toString(), null);
		else
			getMendixObject().setValue(context, MemberNames.Commande_Billet.toString(), commande_billet.getMendixObject().getId());
	}

	/**
	 * @return the IMendixObject instance of this proxy for use in the Core interface.
	 */
	public final com.mendix.systemwideinterfaces.core.IMendixObject getMendixObject()
	{
		return commandeMendixObject;
	}

	/**
	 * @return the IContext instance of this proxy, or null if no IContext instance was specified at initialization.
	 */
	public final com.mendix.systemwideinterfaces.core.IContext getContext()
	{
		return context;
	}

	@java.lang.Override
	public boolean equals(Object obj)
	{
		if (obj == this)
			return true;

		if (obj != null && getClass().equals(obj.getClass()))
		{
			final billeterie.proxies.Commande that = (billeterie.proxies.Commande) obj;
			return getMendixObject().equals(that.getMendixObject());
		}
		return false;
	}

	@java.lang.Override
	public int hashCode()
	{
		return getMendixObject().hashCode();
	}

	/**
	 * @return String name of this class
	 */
	public static java.lang.String getType()
	{
		return "Billeterie.Commande";
	}

	/**
	 * @return String GUID from this object, format: ID_0000000000
	 * @deprecated Use getMendixObject().getId().toLong() to get a unique identifier for this object.
	 */
	@java.lang.Deprecated
	public java.lang.String getGUID()
	{
		return "ID_" + getMendixObject().getId().toLong();
	}
}
